from django.conf.urls import patterns, url, include
from django.contrib.auth.models import User
from rest_framework import routers, serializers, viewsets

# Serializers define the API representation.
class UserSerializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = User
        fields = ('url', 'username', 'email', 'is_staff')

# ViewSets define the view behavior.
class UserViewSet(viewsets.ModelViewSet):
    queryset = User.objects.all()
    serializer_class = UserSerializer

# Routers provide an easy way of automatically determining the URL conf.
router = routers.DefaultRouter()
router.register(r'users', UserViewSet)

from temp import views

urlpatterns = patterns('',
    url(r'^$', views.index, name='index'),
    # ex: /temp/5/ - will send value as snsr_idx to function in views
#    url(r'^(?P<url_snsr_name>\w+)/$', views.detail, name='detail'),
#    url(r'^(?P<url_snsr_name>\w+)/update/$', views.update_temp, name='update'), 
    url(r'^(?P<url_snsr_name>\w+)/$', views.detail, name='detail'),
    url(r'^', include(router.urls)),
    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')),
#    url(r'^(?P<snsr_idx>\d+)/$', views.detail, name='detail'),
    # ex: /polls/5/results/
#    url(r'^(?P<question_id>\d+)/results/$', views.results, name='results'),
    # ex: /polls/5/vote/
#    url(r'^(?P<question_id>\d+)/vote/$', views.vote, name='vote'),
)
